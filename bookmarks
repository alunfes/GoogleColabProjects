https://qiita.com/koara-local/items/ae48162d848872cc29fd


https://qiita.com/zaki-lknr/items/8950f6acea20961a8afc

https://zenn.dev/soags/articles/e4862faa3e8c9d

import pyodbc
import pandas as pd

# ODBC接続の設定
conn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER=your_server;DATABASE=your_database;UID=your_username;PWD=your_password')

# SQLクエリの実行と結果の取得
query = 'SELECT * FROM your_table'
data = pd.read_sql(query, conn)

# 結果の表示
print(data)

# 接続のクローズ
conn.close()


SQL Server構成マネージャー


Azure Automation

automationで検索


Outlookを開き、受信トレイ内で右クリックし、「ルールの作成」を選択します。
「条件の選択」ウィンドウで、「件名に含む」を選択し、特定のキーワードやフレーズを入力します。
次に、「アクションの選択」ウィンドウで、「スクリプトを実行」を選択し、実行したいスクリプトを指定します。


const puppeteer = require('puppeteer');
const fs = require('fs');

(async () => {
  // Puppeteerを起動
  const browser = await puppeteer.launch();

  // 新しいページを開く
  const page = await browser.newPage();

  // 指定URLにアクセス
  await page.goto('https://example.com');

  // HTMLを取得
  const html = await page.content();

  // HTMLをファイルに保存
  fs.writeFileSync('downloaded.html', html);

  // Puppeteerを終了
  await browser.close();

  console.log('HTMLをダウンロードしました。');
})();



このコードを実行するには、以下の手順に従ってください。

Node.jsをインストールします。Node.jsは、JavaScriptランタイム環境であり、このコードを実行するために必要です。Node.jsの公式ウェブサイト（https://nodejs.org/）からインストーラーをダウンロードしてインストールしてください。

プロジェクトディレクトリを作成します。任意の名前のディレクトリを作成し、そのディレクトリに移動します。

依存関係をインストールします。プロジェクトディレクトリ内で、以下のコマンドを実行して、Puppeteerをインストールします。

Copy code
npm install puppeteer
コードをエディタにコピー＆ペーストします。先ほど提供したコードをテキストエディタにコピーし、新しいファイルに貼り付けます。

ファイルを保存します。ファイルを任意の名前（例えば、download_html.js）で保存します。

コマンドラインを開きます。作成したプロジェクトディレクトリ内で、コマンドラインを開いてください。

Node.jsでスクリプトを実行します。以下のコマンドを使用して、先ほど保存したスクリプトを実行します。

Copy code
node download_html.js
実行が完了すると、同じディレクトリに downloaded.html という名前のファイルが生成され、指定されたURLのHTMLがその中にダウンロードされます。




